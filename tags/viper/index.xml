<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Viper on Pradip Mahadev Patil</title>
    <link>https://pradippatil.github.io/tags/viper/</link>
    <description>Recent content in Viper on Pradip Mahadev Patil</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2017. All rights reserved.</copyright>
    <lastBuildDate>Sat, 14 Jan 2017 23:19:36 -0500</lastBuildDate>
    
	<atom:link href="https://pradippatil.github.io/tags/viper/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Configuration management in Go (using Viper)</title>
      <link>https://pradippatil.github.io/post/viper/</link>
      <pubDate>Sat, 14 Jan 2017 23:19:36 -0500</pubDate>
      
      <guid>https://pradippatil.github.io/post/viper/</guid>
      <description>Config factor from The Twelve-Factor App states that application&amp;rsquo;s configuration should be isolated from code to make configuring an app for different environments very convenient and scaling it up a breeze.
Configuration management for modern applications which run on so many different environment is becoming complex with advent of microservices and cloud computing. Not to mention dealing with several formats/markup languages to store app&amp;rsquo;s configurations.
This post is about one of my favorite Go libraries Viper which claims to be a complete configuration solution for Go applications.</description>
    </item>
    
  </channel>
</rss>